// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  
  // Friend relations - both sides
  friendsAsUser     Friend[] @relation("UserFriendsUser")
  friendsAsFriend   Friend[] @relation("UserFriendsFriend")
  
  // Group relations - membership
  userGroups        UserGroup[] @relation("UserGroupsUser")
  
  // Group relations - creator
  createdGroups     Group[] @relation("GroupCreator")
  
  // Request relations - both sides
  sentRequests      Request[] @relation("PendingFriendsSender")
  receivedRequests  Request[] @relation("PendingFriendsReceiver")
  
  // Message relation
  messages          Message[] 
}

model Friend {
  userId    Int
  friendId  Int
  user      User @relation("UserFriendsUser", fields: [userId], references: [id])
  friend    User @relation("UserFriendsFriend", fields: [friendId], references: [id])
  
  @@id([userId, friendId])
}

model Group {
  id          Int         @id @default(autoincrement())
  name        String
  creatorId   Int
  creator     User        @relation("GroupCreator", fields: [creatorId], references: [id])
  userGroups  UserGroup[] @relation("UserGroupsGroup")
  messages Message[] @relation("GroupMessages")
}

model UserGroup {
  userId    Int
  groupId   Int
  user      User  @relation("UserGroupsUser", fields: [userId], references: [id])
  group     Group @relation("UserGroupsGroup", fields: [groupId], references: [id])

  @@id([userId, groupId])
}

model Message {
  id        Int     @id @default(autoincrement())
  message   String
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  groupId Int
  group Group @relation("GroupMessages", fields: [groupId], references: [id])
}

model Request {
  senderId   Int
  receiverId Int
  sender     User @relation("PendingFriendsSender", fields: [senderId], references: [id])
  receiver   User @relation("PendingFriendsReceiver", fields: [receiverId], references: [id])
  
  @@id([senderId, receiverId])
}
